-- 1.

create table DOKUMENTY (
    id number primary key,
    DOKUMENT clob
)

-- 2.

DECLARE
    ValueMax number := 10000;
    TextString varchar(16) := 'Oto tekst. ';
    FinalText clob;
BEGIN
    FOR i IN 1..ValueMax
    LOOP
        FinalText := CONCAT(FinalText, TextString);
    END LOOP;
    
    INSERT INTO DOKUMENTY VALUES(1, FinalText);
END;

-- 3.

SELECT * FROM DOKUMENTY;
SELECT id, UPPER(DOKUMENT) FROM DOKUMENTY;
SELECT id, LENGTH(DOKUMENT) AS document_length FROM DOKUMENTY;
SELECT id, dbms_lob.getlength(DOKUMENT) AS document_length FROM DOKUMENTY;
SELECT id, SUBSTR(DOKUMENT, 5, 1000) AS document_substr FROM DOKUMENTY;
SELECT id, dbms_lob.substr(DOKUMENT, 1000, 5) AS document_substr FROM DOKUMENTY;

-- 4.

INSERT INTO DOKUMENTY VALUES (2, empty_clob());

-- 5.

INSERT INTO DOKUMENTY VALUES (3, null);

-- 6.

SELECT * FROM DOKUMENTY;
SELECT id, UPPER(DOKUMENT) FROM DOKUMENTY;
SELECT id, LENGTH(DOKUMENT) AS document_length FROM DOKUMENTY;
SELECT id, dbms_lob.getlength(DOKUMENT) AS document_length FROM DOKUMENTY;
SELECT id, SUBSTR(DOKUMENT, 5, 1000) AS document_substr FROM DOKUMENTY;
SELECT id, dbms_lob.substr(DOKUMENT, 1000, 5) AS document_substr FROM DOKUMENTY;

-- 7.

DECLARE
    clo clob;
    bf bfile := bfilename('TPD_DIR', 'dokument.txt');
    destination_offset integer := 1;
    source_offset integer := 1;
    bfile_csid number := 0;
    lang_ctx integer := 0;
    warn integer := null;
BEGIN
    SELECT DOKUMENT INTO clo FROM DOKUMENTY WHERE id = 2 FOR UPDATE;
    dbms_lob.fileopen(bf, dbms_lob.file_readonly);
    dbms_lob.loadclobfromfile(clo, bf, dbms_lob.lobmaxsize, destination_offset, source_offset, bfile_csid, lang_ctx, warn);
    dbms_lob.fileclose(bf);
    COMMIT;
    dbms_output.put_line('Status operacji kopiowania: ' || warn);
END;

-- 8.

UPDATE DOKUMENTY SET DOKUMENT = to_clob(bfilename('TPD_DIR', 'dokument.txt')) WHERE id = 3;

-- 9.

SELECT * FROM DOKUMENTY;

-- 10.

SELECT id, dbms_lob.getlength(dokument) AS doc_length FROM DOKUMENTY;

-- 11.

DROP TABLE DOKUMENTY;

-- 12.

CREATE OR REPLACE PROCEDURE CLOB_CENSOR(cl in out clob, ToReplace varchar2)
IS
    dots VARCHAR(255);
    ToReplaceSize INTEGER := LENGTH(ToReplace);
    position INTEGER := 10000;
    occurence INTEGER := 1;
BEGIN
    -- dots := Repeat('.', ToReplaceSize);
    FOR i IN 1..ToReplaceSize
    LOOP
        dots := CONCAT(dots, '.');
    END LOOP;
    
    LOOP
        position := dbms_lob.instr(cl, ToReplace, 1, occurence);
        EXIT WHEN position = 0;
        dbms_lob.write(cl, ToReplaceSize, position, dots);
        occurence := occurence + 1;
    END LOOP;
END CLOB_CENSOR;

-- 13.

CREATE TABLE biographies AS SELECT * FROM ztpd.biographies;
SELECT * FROM biographies;

DECLARE
    cl clob;
BEGIN
    SELECT bio INTO cl FROM biographies WHERE id = 1 FOR UPDATE;
    clob_censor(cl, 'Cimrman');
    commit;
END;

-- 14.

DROP TABLE biographies;
