-- SPATIAL DATA PROCESSING SQL MM

-- 1 A
select lpad('-',2*(level-1),'|-') || t.owner||'.'||t.type_name||' (FINAL:'||t.final||
', INSTANTIABLE:'||t.instantiable||', ATTRIBUTES:'||t.attributes||', METHODS:'||t.methods||')'
from all_types t
start with t.type_name = 'ST_GEOMETRY'
connect by prior t.type_name = t.supertype_name
and prior t.owner = t.owner;

-- 1 B
select distinct m.method_name
from all_type_methods m
where m.type_name like 'ST_POLYGON'
and m.owner = 'MDSYS'
order by 1;

-- 1 C
create table MYST_MAJOR_CITIES (
    FIPS_CNTRY varchar(2),
    CITY_NAME varchar2(40),
    STGEOM st_point
);

-- 1 D
insert into MYST_MAJOR_CITIES(FIPS_CNTRY, CITY_NAME, STGEOM)
select mc.FIPS_CNTRY, mc.CITY_NAME, st_point(mc.GEOM) from major_cities mc;

-- 2 A
insert into MYST_MAJOR_CITIES
values ('PL', 'Szczyrk', st_point(19.036107, 49.718655, 8307));

-- 3 A
create table MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_MULTIPOLYGON
);

-- 3 B
insert into MYST_COUNTRY_BOUNDARIES(FIPS_CNTRY, CNTRY_NAME, STGEOM)
select cb.FIPS_CNTRY, cb.CNTRY_NAME, ST_MULTIPOLYGON(cb.GEOM) from COUNTRY_BOUNDARIES cb;

-- 3 C
select MCB.STGEOM.ST_GEOMETRYTYPE() as TYP_OBIEKTU, count(*) as ILE
from MYST_COUNTRY_BOUNDARIES MCB group by MCB.STGEOM.ST_GEOMETRYTYPE()
order by ILE;

-- 3 D
select B.STGEOM.ST_ISSIMPLE()
from MYST_COUNTRY_BOUNDARIES B;

-- 4 A
select mcb.CNTRY_NAME CNTRY_NAME, COUNT(*)
from MYST_MAJOR_CITIES mmc, MYST_COUNTRY_BOUNDARIES mcb
where mcb.stgeom.st_contains(mmc.stgeom) = 1
group by mcb.CNTRY_NAME;

-- 4 B
select mcb1.CNTRY_NAME A_NAME, mcb2.CNTRY_NAME B_NAME
from MYST_COUNTRY_BOUNDARIES mcb1, MYST_COUNTRY_BOUNDARIES mcb2
where mcb2.stgeom.st_touches(mcb1.stgeom) = 1 and mcb2.CNTRY_NAME = 'Czech Republic';

-- 4 C
select distinct mcb.cntry_name CNTRY_NAME, r.name NAME
from MYST_COUNTRY_BOUNDARIES mcb, rivers r
where mcb.stgeom.st_intersects(st_linestring(r.geom)) = 1 and mcb.CNTRY_NAME = 'Czech Republic';

-- 4 D
select treat(mcb1.stgeom.st_union(mcb2.stgeom) as st_polygon).st_area() POWIERZCHNIA
from MYST_COUNTRY_BOUNDARIES mcb1, MYST_COUNTRY_BOUNDARIES mcb2
where mcb1.cntry_name = 'Czech Republic' and mcb2.cntry_name = 'Slovakia';

-- 4 E
select mcb.stgeom.st_difference(st_geometry(wb.GEOM)).st_geometrytype() as OBIEKTY, mcb.stgeom.st_difference(st_geometry(wb.geom)) as WEGRY_BEZ
from MYST_COUNTRY_BOUNDARIES mcb, WATER_BODIES wb
where mcb.cntry_name = 'Hungary' and wb.name = 'Balaton';

-- 5 A
explain plan for
select mcb.cntry_name, count(*) ILE_MIEJSCOWOSCI
from MYST_COUNTRY_BOUNDARIES mcb, MYST_MAJOR_CITIES mmc
where mcb.cntry_name = 'Poland' and sdo_within_distance(mcb.stgeom, mmc.stgeom, 'distance=100 unit=km') = 'TRUE'
group by mcb.cntry_name;

select plan_table_output from table(dbms_xplan.display('plan_table',null,'basic'));

-- 5 B
select * from all_sdo_geom_metadata;

insert into user_sdo_geom_metadata select 'myst_major_cities', 'stgeom', T.diminfo, T.srid
from all_sdo_geom_metadata T where table_name = 'MAJOR_CITIES';

select * from user_sdo_geom_metadata;

-- 5 C

create index myst_major_cities_idx on myst_major_cities(stgeom) indextype is mdsys.spatial_index;

-- 5 D
explain plan for
select mcb.cntry_name, count(*) ILE_MIEJSCOWOSCI
from MYST_COUNTRY_BOUNDARIES mcb, MYST_MAJOR_CITIES mmc
where mcb.cntry_name = 'Poland' and sdo_within_distance(mcb.stgeom, mmc.stgeom, 'distance=100 unit=km') = 'TRUE'
group by mcb.cntry_name;

select plan_table_output from table(dbms_xplan.display);